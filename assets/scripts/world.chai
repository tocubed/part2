def Location::`=`(Location rhs)
{
	this.x = rhs.x;
	this.y = rhs.y;
}

def location(Entity e)
{
	return script.location(e);
}

def face(Direction d)
{
	return script.face(self, d);
}

def face(Entity e, Location l)
{
	var mine = location(e);
	var theirs = l;

	var dir;

	if(mine.y <= theirs.y)
	{
		dir := DOWN;
	} 
	else
	{
		dir := UP;
	}
	if(mine.x < theirs.x)
	{
		dir := RIGHT;
	}
	else if(mine.x > theirs.x)
	{
		dir := LEFT;
	}

	script.face(e, dir);
}

def face(Location l)
{
	var mine = location(self);
	var theirs = l;

	var dir;

	if(mine.y <= theirs.y)
	{
		dir := DOWN;
	} 
	else
	{
		dir := UP;
	}
	if(mine.x < theirs.x)
	{
		dir := RIGHT;
	}
	else if(mine.x > theirs.x)
	{
		dir := LEFT;
	}

	face(dir);
}

def face(Entity e)
{
	face(location(e));
}

def walk_to(Entity c, Location l, Function callback)
{
	script.walk_to(c, l, callback);
}

def walk_to(Entity c, Location l)
{
	script.walk_to(c, l, fun(){});
}

def walk_to(Location l)
{
	walk_to(self, l);
}

def walk_relative(Entity c, int x, int y)
{
	var newloc = location(c);

	newloc.x += x;
	newloc.y += y;

	walk_to(c, newloc);
}

def walk_relative(int x, int y)
{
	walk_relative(self, x, y);
}

def teleport(Entity c, Location l)
{
	var followers = range(followers(c));
	for(follower: followers)
	{
		script.teleport(follower, l);
	}
	
	script.teleport(c, l);
}

def teleport(Entity c, int x, int y)
{
	var newloc = location(c);

	newloc.x = x;
	newloc.y = y;

	teleport(c, newloc);
}

def freeze_player(bool freeze)
{
	script.freeze_player(freeze);
}

def followers(Entity c)
{
	return script.followers(c);
}

def follow(Entity c, Entity following)
{
	script.follow(c, following);
}

def follow(Entity following)
{
	follow(self, following);
}

def name(Entity e)
{
	// YES THIS IS BAD, fix this later
	return get_script(e, "Name");
}
